(()=>{"use strict";var e={426:(e,t,n)=>{n.d(t,{Z:()=>s});var o=n(537),r=n.n(o),a=n(645),i=n.n(a)()(r());i.push([e.id,":root {\n    --main-color: #ff9e3d;\n    --sub-color: #006DCC60;\n    --form-color: #FFFFFF;\n    --confirm-color: #43B0F1;\n}\n\n* {\n    box-sizing: border-box;\n    padding: 0px;\n    margin: 0px;\n    border: black    1px;\n    font-family: Arial, Helvetica, sans-serif;\n}\n\ninput, button {\n    color: inherit\n}\n\ninput[type=text], input[type=date], select, textarea {\n    padding: 10px;\n    border-radius: 20px;\n    border: solid var(--sub-color) 2px;\n}\n\ninput[type=image] {\n    max-block-size: 2.5rem;\n    justify-self: center;\n    align-self: center;\n}\n\ninput[type=checkbox] {\n    margin: 5px;\n}\n\nform button {\n    padding: 1rem;\n    border-radius: 20px;\n}\n\ninput[type=image]:hover {\n    filter: invert(98%) sepia(29%) saturate(6764%) hue-rotate(312deg) brightness(101%) contrast(101%);\n}\n\ninput:hover,\nbutton:hover,\n.taskTitle:hover,\ntextarea:hover {\n    transform: scale(1.1);\n    cursor: pointer;\n}\n\n.createProjectPopUpContainer {\n    display: none;\n    padding: 2rem;\n    align-items: center;\n    justify-content: center;\n    position:fixed;\n    top: 40%;\n    right: 30%;\n}\n\n#createProjectForm {\n    background-color: var(--form-color);\n    padding: 2rem;\n    border-radius: 20px;\n    box-shadow: 0px 5px 3px grey;\n    border: black 1px solid;\n}\n\n.createTaskPopUpContainer {\n    display: none;\n    justify-content: center;\n    align-items: center;\n    position: fixed;\n    top: 30%;\n    left: 40%;\n    right: 20%;\n}\n\n\n#createTaskForm {\n    padding: 2rem;\n    background-color: var(--form-color);\n    border-radius: 20px;\n    display: flex;\n    gap: 3px;\n    flex-direction: column;\n    border: black 1px solid;\n\n}\n\n.confirm, .cancel {\n    color: white;\n    box-shadow: 0px 5px 3px grey;\n    font-weight: 600;\n    letter-spacing: 1px;\n}\n\n.confirm {\n    background-color: var(--confirm-color);\n}\n\n.cancel {\n    background-color: black;\n}\n\n.container {\n    height: 100vh;\n    display: grid;\n    grid-template-rows: 2fr 12fr 1fr;\n    grid-template-areas: 'header'\n                         'main'\n                         'footer';\n}\n\n.header {\n    background-color: var(--main-color);\n    grid-area: header;\n    padding: 1rem;\n    display: flex;\n    align-items: flex-end;\n    color: white;\n    font-size: x-large;\n    box-shadow: 0px 5px 3px grey;\n}\n\n.logo {\n    width: 4rem;\n}\n\n.main {\n    overflow: scroll;\n    grid-area: main;\n    display: grid;\n    grid-template-columns: 1fr 3fr;\n}\n\n.projects {\n    display: grid;\n    grid-template-rows: 1fr auto 1fr;\n    background-color: var(--sub-color);\n    color: white;\n    box-shadow: 1px 0px 5px grey;\n}\n\n\n.mainContainer {\n    align-self: center;\n    display: flex;\n    flex-direction: column;\n}\n\n.projectsContainer {\n    display: flex;\n    flex-direction: column;\n    gap: 1rem;\n    box-shadow: 0px -5px 5px var(--sub-color); ;\n}\n\n.newProject {\n    padding: 1rem;\n    background: none;\n    font-size: x-large;\n    border: none;\n    font-weight: 700;\n    text-shadow: grey 1px 0 10px;;\n}\n\nh3 {\n    margin-top: 1rem;\n    align-self: center;\n    font-size: xx-large;\n    text-decoration: underline;\n    color: black;\n}\n\n.createButtonContainer {\n    display: flex;\n    align-items: flex-start;\n    justify-content: center;\n}\n\n#createProject {\n    align-self: flex-start;\n}\n\n.buttonContainer {\n    display: flex;\n    justify-content: space-around;\n}\n\n.deleteProject {\n    max-width: 25px;\n\n}\n\n.newProject {\n    width: 100%;\n}\n\n.deleteProject {\n    width: 20%;\n}\n\n.tasksContainer {\n    height: 100%;\n    padding: 1rem;\n    display: grid;\n    grid-template-rows: 2rem;\n    grid-auto-rows: 3rem;\n    gap: 1rem;\n    overflow: scroll;\n}\n\n.currentProject {\n    letter-spacing: 1px;\n}\n\n.task {\n    display: grid;\n    grid-template-columns: 1fr 6fr 2fr 0.5fr 0.5fr;\n    max-height: 3rem;\n    border: solid black 1px;\n    border-radius: 30px;\n    padding: 0px;\n    box-shadow: 1px 0px 5px var(--sub-color);\n}\n\n.task.blank {\n    color: lightslategray;\n    background-color: #BDC3CB70;\n    border: #BDC3CB solid 1px;\n    text-decoration: line-through;\n}\n\n.taskTitle,\n.taskDate {\n    font-size: clamp(1rem, 2vw, 3vw);\n    align-self: center;\n    justify-self: center;\n}\n\n#taskPriorityBtn.low {\n    filter: invert(77%) sepia(59%) saturate(395%) hue-rotate(63deg) brightness(110%) contrast(100%);\n}\n\n#taskPriorityBtn.medium {\n    filter: invert(99%) sepia(86%) saturate(910%) hue-rotate(343deg) brightness(107%) contrast(107%);\n}\n\n#taskPriorityBtn.high {\n    filter: invert(68%) sepia(86%) saturate(4411%) hue-rotate(324deg) brightness(98%) contrast(103%);\n}\n\n\n.myDropDown {\n    position: relative;\n}\n\n#dropDown {\n    display: none;\n    position: absolute;\n    z-index: 1;\n}\n\n.taskInfoContainer {\n    display: none;\n    background-color: white;\n    flex-direction: column;\n    justify-content: center;\n    padding: 2rem;\n    position: fixed;\n    top: 40%;\n    left: 40%;\n    right: 20%;\n    border: solid black 1px;\n    border-radius: 5px;\n}\n\n.footer {\n    grid-area: footer;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    border-top: grey solid 1px;\n}\n\n.credits {\n    gap: 5px;\n    text-decoration: none;\n    color: black;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n}","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"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",sourcesContent:[":root {\n    --main-color: #ff9e3d;\n    --sub-color: #006DCC60;\n    --form-color: #FFFFFF;\n    --confirm-color: #43B0F1;\n}\n\n* {\n    box-sizing: border-box;\n    padding: 0px;\n    margin: 0px;\n    border: black    1px;\n    font-family: Arial, Helvetica, sans-serif;\n}\n\ninput, button {\n    color: inherit\n}\n\ninput[type=text], input[type=date], select, textarea {\n    padding: 10px;\n    border-radius: 20px;\n    border: solid var(--sub-color) 2px;\n}\n\ninput[type=image] {\n    max-block-size: 2.5rem;\n    justify-self: center;\n    align-self: center;\n}\n\ninput[type=checkbox] {\n    margin: 5px;\n}\n\nform button {\n    padding: 1rem;\n    border-radius: 20px;\n}\n\ninput[type=image]:hover {\n    filter: invert(98%) sepia(29%) saturate(6764%) hue-rotate(312deg) brightness(101%) contrast(101%);\n}\n\ninput:hover,\nbutton:hover,\n.taskTitle:hover,\ntextarea:hover {\n    transform: scale(1.1);\n    cursor: pointer;\n}\n\n.createProjectPopUpContainer {\n    display: none;\n    padding: 2rem;\n    align-items: center;\n    justify-content: center;\n    position:fixed;\n    top: 40%;\n    right: 30%;\n}\n\n#createProjectForm {\n    background-color: var(--form-color);\n    padding: 2rem;\n    border-radius: 20px;\n    box-shadow: 0px 5px 3px grey;\n    border: black 1px solid;\n}\n\n.createTaskPopUpContainer {\n    display: none;\n    justify-content: center;\n    align-items: center;\n    position: fixed;\n    top: 30%;\n    left: 40%;\n    right: 20%;\n}\n\n\n#createTaskForm {\n    padding: 2rem;\n    background-color: var(--form-color);\n    border-radius: 20px;\n    display: flex;\n    gap: 3px;\n    flex-direction: column;\n    border: black 1px solid;\n\n}\n\n.confirm, .cancel {\n    color: white;\n    box-shadow: 0px 5px 3px grey;\n    font-weight: 600;\n    letter-spacing: 1px;\n}\n\n.confirm {\n    background-color: var(--confirm-color);\n}\n\n.cancel {\n    background-color: black;\n}\n\n.container {\n    height: 100vh;\n    display: grid;\n    grid-template-rows: 2fr 12fr 1fr;\n    grid-template-areas: 'header'\n                         'main'\n                         'footer';\n}\n\n.header {\n    background-color: var(--main-color);\n    grid-area: header;\n    padding: 1rem;\n    display: flex;\n    align-items: flex-end;\n    color: white;\n    font-size: x-large;\n    box-shadow: 0px 5px 3px grey;\n}\n\n.logo {\n    width: 4rem;\n}\n\n.main {\n    overflow: scroll;\n    grid-area: main;\n    display: grid;\n    grid-template-columns: 1fr 3fr;\n}\n\n.projects {\n    display: grid;\n    grid-template-rows: 1fr auto 1fr;\n    background-color: var(--sub-color);\n    color: white;\n    box-shadow: 1px 0px 5px grey;\n}\n\n\n.mainContainer {\n    align-self: center;\n    display: flex;\n    flex-direction: column;\n}\n\n.projectsContainer {\n    display: flex;\n    flex-direction: column;\n    gap: 1rem;\n    box-shadow: 0px -5px 5px var(--sub-color); ;\n}\n\n.newProject {\n    padding: 1rem;\n    background: none;\n    font-size: x-large;\n    border: none;\n    font-weight: 700;\n    text-shadow: grey 1px 0 10px;;\n}\n\nh3 {\n    margin-top: 1rem;\n    align-self: center;\n    font-size: xx-large;\n    text-decoration: underline;\n    color: black;\n}\n\n.createButtonContainer {\n    display: flex;\n    align-items: flex-start;\n    justify-content: center;\n}\n\n#createProject {\n    align-self: flex-start;\n}\n\n.buttonContainer {\n    display: flex;\n    justify-content: space-around;\n}\n\n.deleteProject {\n    max-width: 25px;\n\n}\n\n.newProject {\n    width: 100%;\n}\n\n.deleteProject {\n    width: 20%;\n}\n\n.tasksContainer {\n    height: 100%;\n    padding: 1rem;\n    display: grid;\n    grid-template-rows: 2rem;\n    grid-auto-rows: 3rem;\n    gap: 1rem;\n    overflow: scroll;\n}\n\n.currentProject {\n    letter-spacing: 1px;\n}\n\n.task {\n    display: grid;\n    grid-template-columns: 1fr 6fr 2fr 0.5fr 0.5fr;\n    max-height: 3rem;\n    border: solid black 1px;\n    border-radius: 30px;\n    padding: 0px;\n    box-shadow: 1px 0px 5px var(--sub-color);\n}\n\n.task.blank {\n    color: lightslategray;\n    background-color: #BDC3CB70;\n    border: #BDC3CB solid 1px;\n    text-decoration: line-through;\n}\n\n.taskTitle,\n.taskDate {\n    font-size: clamp(1rem, 2vw, 3vw);\n    align-self: center;\n    justify-self: center;\n}\n\n#taskPriorityBtn.low {\n    filter: invert(77%) sepia(59%) saturate(395%) hue-rotate(63deg) brightness(110%) contrast(100%);\n}\n\n#taskPriorityBtn.medium {\n    filter: invert(99%) sepia(86%) saturate(910%) hue-rotate(343deg) brightness(107%) contrast(107%);\n}\n\n#taskPriorityBtn.high {\n    filter: invert(68%) sepia(86%) saturate(4411%) hue-rotate(324deg) brightness(98%) contrast(103%);\n}\n\n\n.myDropDown {\n    position: relative;\n}\n\n#dropDown {\n    display: none;\n    position: absolute;\n    z-index: 1;\n}\n\n.taskInfoContainer {\n    display: none;\n    background-color: white;\n    flex-direction: column;\n    justify-content: center;\n    padding: 2rem;\n    position: fixed;\n    top: 40%;\n    left: 40%;\n    right: 20%;\n    border: solid black 1px;\n    border-radius: 5px;\n}\n\n.footer {\n    grid-area: footer;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    border-top: grey solid 1px;\n}\n\n.credits {\n    gap: 5px;\n    text-decoration: none;\n    color: black;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n}"],sourceRoot:""}]);const s=i},645:e=>{e.exports=function(e){var t=[];return t.toString=function(){return this.map((function(t){var n="",o=void 0!==t[5];return t[4]&&(n+="@supports (".concat(t[4],") {")),t[2]&&(n+="@media ".concat(t[2]," {")),o&&(n+="@layer".concat(t[5].length>0?" ".concat(t[5]):""," {")),n+=e(t),o&&(n+="}"),t[2]&&(n+="}"),t[4]&&(n+="}"),n})).join("")},t.i=function(e,n,o,r,a){"string"==typeof e&&(e=[[null,e,void 0]]);var i={};if(o)for(var s=0;s<this.length;s++){var c=this[s][0];null!=c&&(i[c]=!0)}for(var A=0;A<e.length;A++){var l=[].concat(e[A]);o&&i[l[0]]||(void 0!==a&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=a),n&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=n):l[2]=n),r&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=r):l[4]="".concat(r)),t.push(l))}},t}},537:e=>{e.exports=function(e){var t=e[1],n=e[3];if(!n)return t;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(n)))),r="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),a="/*# ".concat(r," */");return[t].concat([a]).join("\n")}return[t].join("\n")}},379:e=>{var t=[];function n(e){for(var n=-1,o=0;o<t.length;o++)if(t[o].identifier===e){n=o;break}return n}function o(e,o){for(var a={},i=[],s=0;s<e.length;s++){var c=e[s],A=o.base?c[0]+o.base:c[0],l=a[A]||0,d="".concat(A," ").concat(l);a[A]=l+1;var p=n(d),u={css:c[1],media:c[2],sourceMap:c[3],supports:c[4],layer:c[5]};if(-1!==p)t[p].references++,t[p].updater(u);else{var C=r(u,o);o.byIndex=s,t.splice(s,0,{identifier:d,updater:C,references:1})}i.push(d)}return i}function r(e,t){var n=t.domAPI(t);return n.update(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap&&t.supports===e.supports&&t.layer===e.layer)return;n.update(e=t)}else n.remove()}}e.exports=function(e,r){var a=o(e=e||[],r=r||{});return function(e){e=e||[];for(var i=0;i<a.length;i++){var s=n(a[i]);t[s].references--}for(var c=o(e,r),A=0;A<a.length;A++){var l=n(a[A]);0===t[l].references&&(t[l].updater(),t.splice(l,1))}a=c}}},569:e=>{var t={};e.exports=function(e,n){var o=function(e){if(void 0===t[e]){var n=document.querySelector(e);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(e){n=null}t[e]=n}return t[e]}(e);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(n)}},216:e=>{e.exports=function(e){var t=document.createElement("style");return e.setAttributes(t,e.attributes),e.insert(t,e.options),t}},565:(e,t,n)=>{e.exports=function(e){var t=n.nc;t&&e.setAttribute("nonce",t)}},795:e=>{e.exports=function(e){var t=e.insertStyleElement(e);return{update:function(n){!function(e,t,n){var o="";n.supports&&(o+="@supports (".concat(n.supports,") {")),n.media&&(o+="@media ".concat(n.media," {"));var r=void 0!==n.layer;r&&(o+="@layer".concat(n.layer.length>0?" ".concat(n.layer):""," {")),o+=n.css,r&&(o+="}"),n.media&&(o+="}"),n.supports&&(o+="}");var a=n.sourceMap;a&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),t.styleTagTransform(o,e,t.options)}(t,e,n)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(t)}}}},589:e=>{e.exports=function(e,t){if(t.styleSheet)t.styleSheet.cssText=e;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(e))}}}},t={};function n(o){var r=t[o];if(void 0!==r)return r.exports;var a=t[o]={id:o,exports:{}};return e[o](a,a.exports,n),a.exports}n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},n.d=(e,t)=>{for(var o in t)n.o(t,o)&&!n.o(e,o)&&Object.defineProperty(e,o,{enumerable:!0,get:t[o]})},n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),n.nc=void 0,(()=>{var e=n(379),t=n.n(e),o=n(795),r=n.n(o),a=n(569),i=n.n(a),s=n(565),c=n.n(s),A=n(216),l=n.n(A),d=n(589),p=n.n(d),u=n(426),C={};C.styleTagTransform=p(),C.setAttributes=c(),C.insert=i().bind(null,"head"),C.domAPI=r(),C.insertStyleElement=l(),t()(u.Z,C),u.Z&&u.Z.locals&&u.Z.locals;class g{constructor(e,t,n,o,r){this.title=e,this.description=t,this.dueDate=n,this.priority=o,this.check=r}}class m{constructor(e){this.title=e,this.tasks=[]}getTitle(){return this.title}getTasks(){return this.tasks}findTask(e){return this.tasks.find((t=>t.title===e))}setTasks(e){return this.tasks=e}addTask(e){this.tasks.push(e)}deleteTask(e){return this.tasks=this.tasks.filter((t=>t.title!==e))}}class f{constructor(){this.projects=[],this.projects.push(new m("Home")),this.projects.push(new m("Today")),this.projects.push(new m("Week"))}setProjects(e){return this.projects=e}getProjects(){return this.projects}findProject(e){return this.projects.find((t=>t.title===e))}addProject(e){this.projects.push(e)}deleteProject(e){const t=this.findProject(e);this.projects.splice(this.projects.indexOf(t),1)}addTask(e,t){e.tasks.push(t)}}class h{static saveTodoList(e){localStorage.setItem("todoList",JSON.stringify(e))}static getTodoList(){const e=Object.assign(new f,JSON.parse(localStorage.getItem("todoList")));return e.setProjects(e.getProjects().map((e=>Object.assign(new m,e)))),e.getProjects().forEach((e=>{e.setTasks(e.getTasks().map((e=>Object.assign(new g,e))))})),e}static saveProject(e){const t=this.getTodoList();t.addProject(e),h.saveTodoList(t)}static deleteProject(e){const t=this.getTodoList();t.deleteProject(e),h.saveTodoList(t)}static updateToday(){const e=this.getTodoList(),t=[];let n=new Date;const o=String(n.getDate()).padStart(2,"0"),r=String(n.getMonth()+1).padStart(2,"0"),a=n.getFullYear();n=a+"-"+r+"-"+o,e.findProject("Today").tasks=[],e.findProject("Week").tasks=[],e.getProjects().map((e=>{e.getTasks().map((e=>{t.push(e)}))})),t.forEach((t=>{t.dueDate===n&&e.findProject("Today").tasks.push(t)})),h.saveTodoList(e)}static updateWeek(){const e=this.getTodoList(),t=[];e.findProject("Week").tasks=[],e.findProject("Today").tasks=[],e.getProjects().map((e=>{e.getTasks().map((e=>{t.push(e)}))})),t.forEach((t=>{(e=>{const t=new Date,n=new Date(t.setDate(t.getDate()-t.getDay())),o=new Date(t.setDate(t.getDate()+(6-t.getDay())));return e>=n&&e<=o})(new Date(t.dueDate))&&e.findProject("Week").tasks.push(t)})),h.saveTodoList(e)}static deleteTask(e,t){const n=this.getTodoList();n.findProject(e).deleteTask(t),h.saveTodoList(n)}static saveTaskToProject(e,t){const n=this.getTodoList();n.addTask(n.findProject(e),t),"Home"!==e&&n.addTask(n.findProject("Home"),t),h.saveTodoList(n)}static checkTask(e,t,n){const o=this.getTodoList();o.findProject(e).findTask(t).check=!!n&&"checked",h.saveTodoList(o)}static changePriority(e,t,n){const o=this.getTodoList();o.findProject(e).findTask(t).priority=n,h.saveTodoList(o)}}class B{static loadStorage(){if(localStorage.length){const e=h.getTodoList(),t=document.querySelector(".tasksContainer"),n=document.createElement("h2"),o=document.createElement("input"),r=e.findProject("Home");t.innerHTML="",n.textContent="Home",o.type="image",o.src="../../dist/icons/plus.svg",n.classList.add("currentProject"),o.classList.add("addTask"),t.appendChild(n),t.appendChild(o),r.tasks.forEach((e=>{t.innerHTML+=`<div class="task">\n                <input id="taskBox" ${e.check} type="checkbox">\n                <div class="taskTitle">${e.title}</div>\n                <div class="taskDate">${e.dueDate}</div>\n                <div class="myDropDown">\n                    <input id="taskPriorityBtn" type="image" src="./icons/priority.svg" alt="Task Priority">\n                        <div id="dropDown">\n                            <select name="priority" id="priority">\n                                <option value="Low">Low</option>\n                                <option value="Medium">Medium</option>\n                                <option value="High">High</option>\n                            </select>\n                        </div>\n                </div>\n                <input id="taskDelete" type="image" src="./icons/delete.svg" alt="Delete Task">\n                </div>`}));const a=document.querySelector(".newProjectsContainer");e.getProjects().forEach((e=>{"Home"!==e.title&&"Today"!==e.title&&"Week"!==e.title&&(a.innerHTML+=`<div class="buttonContainer">\n                                                   <button type="button" class="btn newProject">${e.title}</button>\n                                                   <input type="image" class="btn deleteProject" src="./icons/delete.svg">\n                                                   </div>`)}))}else{const e=new f;h.saveTodoList(e)}}static initButtons(){const e=document.querySelector("#createProject"),t=document.querySelector(".cancelBtn"),n=document.querySelector("#createProjectForm"),o=document.querySelectorAll(".deleteProject"),r=document.querySelectorAll(".newProject"),a=document.querySelector(".addTask"),i=document.querySelector(".cancelBtnTask"),s=document.querySelector("#createTaskForm"),c=document.querySelectorAll("#taskDelete"),A=document.querySelectorAll(".taskTitle"),l=document.querySelectorAll("#taskBox"),d=document.querySelectorAll("#taskPriorityBtn"),p=document.querySelectorAll("#priority");e.addEventListener("click",this.openCreateProject),t.addEventListener("click",this.closeCreateProject),n.addEventListener("submit",this.createProject),o.forEach((e=>{e.addEventListener("click",this.deleteProject)})),r.forEach((e=>{e.addEventListener("click",this.openProject)})),a.addEventListener("click",this.openCreateTask),i.addEventListener("click",this.closeCreateTask),s.addEventListener("submit",this.createTask),c.forEach((e=>{e.addEventListener("click",this.deleteTask)})),A.forEach((e=>{e.addEventListener("click",this.openTaskInfo)})),l.forEach((e=>{e.addEventListener("change",this.blankTask)})),d.forEach((e=>{e.addEventListener("click",this.openTaskPrioritySelect)})),p.forEach((e=>{e.addEventListener("change",this.changeTaskPriority),e.addEventListener("change",this.updatePriorityColor)})),window.addEventListener("DOMContentLoaded",this.blankTask),window.addEventListener("DOMContentLoaded",this.updatePriorityColor)}static enableClosePopUps(e){document.querySelector("body").addEventListener("click",this.closePopUps)}static disableClosePopUps(){document.querySelector("body").removeEventListener("click",this.closePopUps)}static closePopUps(){B.closeTaskInfo(),B.disableClosePopUps()}static createProject(e){e.preventDefault();const t=document.querySelector("#createProjectForm"),n=document.querySelector(".newProjectsContainer"),o=new m(t.projectTitle.value);t.projectTitle.value="",n.innerHTML+=`<div class="buttonContainer">\n                                           <button type="button" class="btn newProject">${o.title}</button>\n                                           <input type="image" class="btn deleteProject" src="./icons/delete.svg">\n                                           </div>`,h.saveProject(o),B.initButtons()}static createTask(e){e.preventDefault();const t=document.querySelector(".tasksContainer"),n=document.querySelector("#createTaskForm"),o=new g(n.taskTitle.value,n.taskDescription.value,n.taskDueDate.value,n.taskPriority.value,!1);t.innerHTML+=`<div class="task">\n        <input id="taskBox" ${o.check} type="checkbox">\n        <div class="taskTitle">${o.title}</div>\n        <div class="taskDate">${o.dueDate}</div>\n        <div class="myDropDown">\n            <input id="taskPriorityBtn" type="image" src="./icons/priority.svg" alt="Task Priority">\n                <div id="dropDown">\n                    <select name="priority" id="priority">\n                        <option value="Low">Low</option>\n                        <option value="Medium">Medium</option>\n                        <option value="High">High</option>\n                    </select>\n                </div>\n        </div>\n        <input id="taskDelete" type="image" src="./icons/delete.svg" alt="Delete Task">\n        </div>`;const r=document.querySelector(".currentProject").innerHTML;n.reset(),h.saveTaskToProject(r,o),B.initButtons(),B.updatePriorityColor()}static deleteProject(){const e=this.parentNode,t=e.querySelector(".newProject").textContent;h.deleteProject(t),e.remove()}static deleteTask(){const e=this.parentNode,t=e.querySelector(".taskTitle").textContent,n=document.querySelector(".currentProject").textContent;console.log(t),h.deleteTask(n,t),e.remove()}static openCreateProject(e){e.stopPropagation(),document.querySelector(".createProjectPopUpContainer").style.display="flex"}static closeCreateProject(){const e=document.querySelector(".createProjectPopUpContainer");document.querySelector("#createProjectForm").reset(),e.style.display="none"}static openCreateTask(e){e.stopPropagation();const t=document.querySelector(".createTaskPopUpContainer"),n=document.querySelector("#createTaskForm");n.querySelector("#taskDueDate").setAttribute("min",(new Date).toISOString().split("T")[0]),n.reset(),t.style.display="flex"}static closeCreateTask(){document.querySelector(".createTaskPopUpContainer").style.display="none"}static openProject(e){const t=document.querySelector(".tasksContainer"),n=document.createElement("h2"),o=document.createElement("input"),r=e.target.innerHTML;"Today"===r?(o.style.display="none",h.updateToday()):"Week"===r&&(o.style.display="none",h.updateWeek());const a=h.getTodoList().findProject(r);t.innerHTML="",n.textContent=a.title,o.type="image",o.src="../../dist/icons/plus.svg",n.classList.add("currentProject"),o.classList.add("addTask"),t.appendChild(n),t.appendChild(o),a.tasks.forEach((e=>{t.innerHTML+=`<div class="task">\n            <input id="taskBox" ${e.check} type="checkbox">\n            <div class="taskTitle">${e.title}</div>\n            <div class="taskDate">${e.dueDate}</div>\n            <div class="myDropDown">\n                <input id="taskPriorityBtn" type="image" src="./icons/priority.svg" alt="Task Priority">\n                <div id="dropDown">\n                    <select name="priority" id="priority">\n                        <option value="Low">Low</option>\n                        <option value="Medium">Medium</option>\n                        <option value="High">High</option>\n                    </select>\n                </div>\n            </div>\n            <input id="taskDelete" type="image" src="./icons/delete.svg" alt="Delete Task">\n            </div>`})),B.blankTask(),B.updatePriorityColor(),B.initButtons()}static openTaskInfo(e){e.stopPropagation();const t=document.querySelector(".currentProject").textContent,n=e.target.textContent,o=document.querySelector(".taskInfoContainer"),r=h.getTodoList().findProject(t).findTask(n);o.innerHTML="";for(const e in r)if("check"===e);else if("description"===e){const t=document.createElement("p");t.textContent=r[e],o.appendChild(t)}else{const t=document.createElement("h4");t.textContent=r[e],o.appendChild(t)}o.style.display="flex",B.enableClosePopUps()}static closeTaskInfo(){document.querySelector(".taskInfoContainer").style.display="none"}static blankTask(){const e=document.querySelector(".currentProject").textContent,t=document.querySelectorAll(".task");let n=!1;t.forEach((t=>{!0===t.querySelector("#taskBox").checked?(t.classList.add("blank"),n=!0):(t.classList.remove("blank"),n=!1);const o=t.querySelector(".taskTitle").textContent;h.checkTask(e,o,n)}))}static openTaskPrioritySelect(e){e.stopPropagation();const t=e.target.closest(".task").querySelector("#dropDown");"flex"===t.style.display?t.style.display="none":t.style.display="flex"}static changeTaskPriority(e){e.stopPropagation();const t=e.target,n=this.value,o=t.closest(".task"),r=o.querySelector(".taskTitle").textContent,a=document.querySelector(".currentProject").textContent;h.changePriority(a,r,n),o.querySelector("#dropDown").style.display="none"}static updatePriorityColor(){const e=document.querySelectorAll("#taskPriorityBtn"),t=document.querySelector(".currentProject").textContent;e.forEach((e=>{const n=e.closest(".task").querySelector(".taskTitle").textContent,o=h.getTodoList().findProject(t).findTask(n).priority.toLowerCase();e.className="",e.classList.add(o)}))}}B.loadStorage(),B.initButtons()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,